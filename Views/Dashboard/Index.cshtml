@model IEnumerable<BusinessModel.EmployeeProfileDetails>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div class="container mt-2 grid-container">
    <div class="grid-item item1 highlight-card p-4 dashboard-card-TotalEmployees card-hover">
        <canvas id="attendanceChart"></canvas>
    </div>


    <div class="grid-item item1 highlight-card p-4 dashboard-card-TotalEmployees card-hover">
        <div class="text-center mb-4">
            <p class="empMonth">🎁 Employees with Birthday this Month 🎁</p>
        </div>

        <div class="d-flex flex-column align-items-center">
            <div class="birthday-card mb-2 p-2 w-100">
                <div>
                    <p class="mb-0 employeeName">John Doe</p>
                </div>
                <div> <small class="cackIcon">Sept 25</small>  🎂</div>
            </div>

            <div class="birthday-card mb-2 p-2 w-100">
                <div>
                    <p class="mb-0 employeeName">Jane Smith </p>
                </div>
                <div><small class="cackIcon">Sept 19</small>  🎂</div>
            </div>

            <div class="birthday-card mb-2 p-2 w-100">
                <div>
                    <p class="mb-0 employeeName">Mark Brown</p>
                </div>
                <div> <small class="cackIcon">Sept 13</small>  🎂</div>
            </div>

            <div class="birthday-card mb-2 p-2 w-100">
                <div>
                    <p class="mb-0 employeeName">Emily Davis </p>
                </div>
                <div><small class="cackIcon">Sept 13</small>  🎂</div>
            </div>

            <div class="birthday-card mb-2 p-2 w-100">
                <div>
                    <p class="mb-0 employeeName">Chris Brown </p>
                </div>
                <div><small class="cackIcon">Sept 13</small>  🎂</div>
            </div>
        </div>
    </div>

    <div class="grid-item item1 highlight-card p-3 dashboard-card-TotalEmployees card-hover">
        <div class="text-center mb-2">
            <p class="todaysevent">🎉 Todays/UpComming Events 🎉</p>
        </div>

        <div class="d-flex flex-column align-items-center">
            <div class="birthday-card mb-2 p-2 w-100">
                <div>
                    <p class="mb-0 employeeName">Carrom Compitition </p>
                </div>
                <div> <small class="cackIcon">Sept 25</small> 🎉</div>
            </div>

            <div class="birthday-card mb-2 p-2 w-100">
                <div>
                    <p class="mb-0 employeeName">Cricket Match</p>
                </div>
                <div> <small class="cackIcon">Sept 25</small> 🎉</div>
            </div>

            <div class="birthday-card mb-2 p-2 w-100">
                <div>
                    <p class="mb-0 employeeName">Diwali Celebration </p>
                </div>
                <div> <small class="cackIcon">Sept 19</small> 🎉</div>
            </div>
        </div>
    </div>

    <div class="grid-item item2 highlight-card p-4 dashboard-card-TotalEmployees card-hover chat-window">
        <p class="TalkWithEmployees">Communicate with Employees</p>
        <div class="messages" id="chatMessages">
            <div class="col-md-14 dropdownlistdiv">
                <select class="form-control drp" id="employeeSelect" asp-items="@(new SelectList(ViewBag.ReportingManagers, "ReportingManager", "ReportingManagerName"))">
                    <option value="0" class="form-control">Select Employee</option>
                </select>
            </div>
        </div>

        <div class="input">
            <input type="text" placeholder="Type your message..." id="userMessage" class="Employeeinput">
            <button class="btnSendMessageWithEmployee" onclick="sendMessage()">
                <img src="~/send.png" class="sendImg" />
            </button>
        </div>
    </div>

    <div class="grid-item item4 highlight-card p-4 dashboard-card-TotalEmployees card-hover">
        <p class="EmployeeOfTheMonth">Employee of the Month</p>
        <div class="text-center">
            <img src="/office boy.jpg" class="employee-img mb-3 officeBoyImage" alt="Employee Image">
            <p class="mb-0">Michael Brown</p>
            <small class="AwardInfo">Awarded for outstanding performance in September.</small>
        </div>
    </div>

    <div class="chatbot-icon" onclick="openChatbot()">
        <i class="fa fa-comments"></i>
    </div>

    <div id="chatbotModal" class="chatbot-modal">
        <div class="chatbot-header">
            Chatbot
            <button onclick="closeChatbot()" class="btnCloseChatBot">&times;</button>
        </div>
        <div class="chatbot-body " id="chatbotBody">
            <p class="message-left">Good Morning, John Doe, how can i help you today?😊</p>
        </div>
        <div class="input-container">
            <input type="text" placeholder="Type your message..." id="userMessages">
            <button onclick="sendMessages()" class="btnSendMessageToBot">
                <img src="~/send.png" class="sendImg"/>
            </button>
        </div>
    </div>

</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<style>
    .btnSendMessageToBot {
        background-color: #007bff;
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btnCloseChatBot
    {
        float: right;
        background: none;
        border: none;
        color: white;
    }

    .AwardInfo
    {
        font-size: 15px;
    }

    .officeBoyImage
    {
        width: 90px;
        height: 72px;
        border-radius: 50px;
        object-fit: cover;
    }

    .EmployeeOfTheMonth
    {
        font-size: medium;
        font-family: math;
    }

    .sendImg
    {
        width: 20px;
        filter: invert(1);
    }

    .btnSendMessageWithEmployee
    {
        background-color: #007bff;
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .Employeeinput
    {
        flex: 1;
        padding: 10px;
        font-size: 14px;
        border-radius: 20px;
        border: 1px solid #ddd;
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .dropdownlistdiv
    {
        margin-bottom: 10px;
    }

    #chatMessages {
        font-size: 14px;
        height: 300px;
        overflow-y: auto;
        padding: 10px;
        background: #ffffff;
        border-radius: 8px;
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);
        margin-bottom: 20px;
    }

    .cackIcon
    {
        font-size: 14px;
        color: #555;
    }

    .employeeName
    {
        font-size: 14px;
        font-weight: 600;
        color: #333;
    }

    .birthday-card {
        background-color: #ffffff;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-shadow: 0 4px 100px rgba(0, 0, 0, 0.1);
    }

    .todaysevent {
        font-size: medium;
        font-family: math;
    }

    .TalkWithEmployees
    {
        font-size: medium;
        font-family: math;
    }

    .empMonth
    {
        font-size: medium;
        font-family: math;
    }

    /* Chatbot Icon Style */
    .chatbot-icon {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #163855;
        color: white;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 1000;
    }

        .chatbot-icon:hover {
            background-color: #0056b3;
        }

    /* Chatbot Modal Style */
    .chatbot-modal {
        display: none; /* Hidden by default */
        position: fixed;
        bottom: 80px;
        right: 20px;
        width: 371px;
        height: 400px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        z-index: 1001;
        overflow: hidden;
    }

    .chatbot-header {
        background-color: #163855;
        color: white;
        padding: 10px;
        font-weight: bold;
    }

    .chatbot-body {
        padding: 15px;
        height: 292px;
        overflow-y: auto;
    }

    .message-left {
        padding: 8px;
        margin: 5px 0;
        border-radius: 10px;
        max-width: 90%;
    }

    .message-right {
        padding: 8px;
        margin: 5px 0;
        border-radius: 10px;
        max-width: 70%;
    }

    .message-left {
        text-align: left;
        background-color: #f0f0f5;
        color: #333;
    }

    .message-right {
        background-color: #d1e7dd;
        color: #333;
        margin-left: auto;
    }

    .input-container {
        display: flex;
        align-items: center;
        border-top: 1px solid #ddd;
        padding: 10px;
    }

        .input-container input {
            flex: 1;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 21px;
            margin-right: 5px;
        }

        .input-container button {
            /* background-color: transparent; */
            border: none;
            cursor: pointer;
        }

    #attendanceChart {
        max-width: 295px; /* Control size through CSS */
        max-height: 295px;
    }

    #employeeSelect {
        width: 100%;
        padding: 8px;
        border-radius: 10px;
        border: 1px solid #ddd;
    }

    #userMessage {
        border-radius: 10px;
    }

    .user-message {
        text-align: center;
        background-color: #dcf8c6;
        padding: 10px;
        border-radius: 20px;
        margin: 5px;
        width: 270px;
        margin-left: 71px;
    }

    .bot-message {
        text-align: center;
        background-color: #ffd0d0;
        padding: 10px;
        border-radius: 20px;
        margin: 5px;
        width: 278px;
        margin-left: 71px;
    }



    /* Add any necessary styles here */
    .main-header {
        background-color: #3880ff; /* Example color */
        color: white;
    }

    .chat-window {
        display: flex;
        flex-direction: column;
        background-color: white;
    }

    .messages {
        flex-grow: 1;
        overflow-y: auto;
        max-height: 300px; /* Set height as needed */
        margin-bottom: 10px;
    }

    .input {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-top: 120px
    }

        .input input {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .input button {
            padding: 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            margin-left: 5px;
        }

    .grid-container {
        display: grid;
        gap: 15px;
        padding: 4px;
    }

    .grid-item {
        /* background: white;  */
        text-align: center;
        padding: 20px;
        font-size: 15px;
        border-radius: 5px; /* Optional: adds rounded corners to cards */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Optional: adds a subtle shadow for depth */
    }

    .item2 {
        grid-column: 3;
        grid-row: 1 / span 2;
    }

    .dashboard-card {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        margin-bottom: 20px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .employee-img {
        width: 75px;
        height: 75px;
        border-radius: 50%;
        object-fit: cover;
    }

    .highlight-card-birthday {
        /* background-color: #d1d7ff; */
        text-align: center;
        padding: 10px;
        border-radius: 6px;
    }


    .highlight-card {
        background-color: #f1f1f1;
        text-align: center;
        padding: 10px;
        border-radius: 6px;
    }

    .dashboard-card-Employee {
        /* background-color: #a4abd3; */
        text-align: center;
        padding: 10px;
        border-radius: 6px;
    }

    .dashboard-card-TotalEmployees {
        background: white;
        text-align: center;
        padding: 10px;
        border-radius: 10px;
    }

    .dashboard-card-MonthlyHolidays {
        /* background-color: #ebd6d6; */
        text-align: center;
        padding: 10px;
        border-radius: 10px;
        /*         background: linear-gradient(135deg, #6d9ee6, #a1d0f7);
            color: white; */
    }

    .dashboard-card-WeeklyHolidays {
        /* background-color: #ebd6d6; */
        text-align: center;
        padding: 10px;
        border-radius: 40px;
    }

    h2 {
        color: #007bff;
    }

    .employee-dropdown {
        width: 100%;
    }

    .form-select {
        padding: 10px;
        border-radius: 4px;
        border: 1px solid #ccc;
        font-size: 16px;
    }
</style>

<script>
    const ctx = document.getElementById('attendanceChart').getContext('2d');

    const data = {
        labels: ['Present', 'Absent', 'Leave'],
        datasets: [{
            label: 'Employee Attendance',
            data: [20, 30, 60], // 80% present, 20% absent
            backgroundColor: ['green', 'red', 'blue']
        }]
    };

    const attendanceChart = new Chart(ctx, {
        type: 'doughnut', // Type of chart: doughnut for circular chart
        data: data,
        options: {
            responsive: false, // Disable responsiveness to fully control size
            maintainAspectRatio: false, // Let the chart fill the canvas without keeping aspect ratio
            plugins: {
                legend: {
                    position: 'top',
                }
            }
        }
    });

    let messageCount = 0; 

    function sendMessage() {
        const employeeSelect = document.getElementById("employeeSelect");
        const messageInput = document.getElementById("userMessage");
        const chatMessages = document.getElementById("chatMessages");

        const selectedEmployee = employeeSelect.options[employeeSelect.selectedIndex].text;
        const message = messageInput.value.trim();

        if (employeeSelect.value == "0" || !message) {
            alert("Please select an employee and type a message.");
            return;
        }

        const messageDiv = document.createElement("div");
        if (messageCount % 2 === 0) {
            messageDiv.classList.add("message-right");
        } else {
            messageDiv.classList.add("message-left");
        }
        messageDiv.innerHTML = `${message}`;
        chatMessages.appendChild(messageDiv);

        messageInput.value = "";
        chatMessages.scrollTop = chatMessages.scrollHeight;
        messageCount++;
    }

    function openChatbot() {
        document.getElementById("chatbotModal").style.display = "block";
    }

    function closeChatbot() {
        document.getElementById("chatbotModal").style.display = "none";
    }

    function sendMessages() {
        debugger;
        const userMessages = document.getElementById("userMessages").value.trim();
        const chatbotBody = document.getElementById("chatbotBody");

        if (userMessages) {
            const userMessageDivs = document.createElement("div");
            userMessageDivs.className = "message-right";
            userMessageDivs.textContent = userMessages;
            chatbotBody.appendChild(userMessageDivs);

            chatbotBody.scrollTop = chatbotBody.scrollHeight;

            const chatbotResponse = document.createElement("div");
            chatbotResponse.className = "message-left";

            if (userMessages.toLowerCase() == "how to apply leave") {
                chatbotResponse.innerHTML = 'Thinking...';

                setTimeout(function () {
                    chatbotResponse.innerHTML = 'Please <a href="http://localhost:5100/Leave/EmployeeLeave" target="_blank">Click here</a> to apply leave.';
                }, 4000);
            }

            else if (userMessages.toLowerCase() == "give me manager contact") {
                // Show thinking message first
                chatbotResponse.innerHTML = 'Thinking...';

                // Set timeout for 4 seconds before showing the actual response
                setTimeout(function () {
                    chatbotResponse.innerHTML = `
                <table class="table">
                  <thead>
                    <tr>
                      <th style="font-size: 14px;">Manager</th>
                      <th style="font-size: 14px;">Contact</th>
                      <th style="font-size: 14px;">Email</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td style="font-size: 13px;">Mark</td>
                      <td style="font-size: 13px;">12315515151</td>
                      <td style="font-size: 13px;">mark@gmail.com</td></tr>
                  </tbody>
                </table>`;
                }, 4000); // 4 seconds delay
            }
            else if (userMessages.toLowerCase() == "what is my leave balance") {
                chatbotResponse.innerHTML = 'Thinking...';
                setTimeout(function () {
                    chatbotResponse.innerHTML = 'Your leave balance is <b>5</b>, if you want to apply leave, Please <a href="http://localhost:5100/Leave/EmployeeLeave" target="_blank">Click here</a> to apply leave.';
                }, 4000);
            }
            else if (userMessages.toLowerCase() == "how can i view/download my payslip") {
                chatbotResponse.innerHTML = 'Thinking...';
                setTimeout(function () {
                    chatbotResponse.innerHTML = 'Please <a href="http://localhost:5100/Payslip/EmployeePayslip" target="_blank">Click here</a>  to download your payslip.';
                }, 4000);
            }
            else if (userMessages.toLowerCase() == "what is my current salary") {
                chatbotResponse.innerHTML = 'Thinking...';
                setTimeout(function () {
                    chatbotResponse.innerHTML = 'Your current salary is <b>$496.54</b>, Please <a href="http://localhost:5100/Payslip/EmployeePayslip" target="_blank">Click here</a> to view/download your payslip.';
                }, 4000);
            }
            else if (userMessages.toLowerCase() == "how do i update my employee details") {
                chatbotResponse.innerHTML = 'Thinking...';
                setTimeout(function () {
                    chatbotResponse.innerHTML = 'Please <a href="http://localhost:5100/ManageResourceDetails/ManageResource" target="_blank">Click here</a> to update your employee details.';
                }, 4000);
            }
            else if (userMessages.toLowerCase() == "where can i find hr contact details") {
                chatbotResponse.innerHTML = 'Thinking...';
                setTimeout(function () {
                    chatbotResponse.innerHTML = `
                <table class="table">
                  <thead>
                    <tr>
                      <th style="font-size: 14px;">Name</th>
                      <th style="font-size: 14px;">Contact</th>
                      <th style="font-size: 14px;">Email</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td style="font-size: 13px;">Jenny M</td>
                      <td style="font-size: 13px;">5284111818</td>
                      <td style="font-size: 13px;">Jenny@gmail.com</td></tr>
                  </tbody>
                </table>`;
                }, 4000);
            }
            else {
                chatbotResponse.innerHTML = 'Thinking...';
                setTimeout(function () {
                    chatbotResponse.textContent = "I'm here to help. What would you like to know?";
                }, 4000);
            }


            // Display chatbot response after a short delay
            setTimeout(() => {
                chatbotBody.appendChild(chatbotResponse);
                chatbotBody.scrollTop = chatbotBody.scrollHeight;
            }, 500);

            // Clear input field
            document.getElementById("userMessages").value = "";
        }
    }
</script>



